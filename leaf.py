import os
from vertexai import init
from vertexai.generative_models import GenerativeModel, Part


import streamlit as st
from google.oauth2 import service_account
from google.cloud import firestore
import firebase_admin
from firebase_admin import credentials as admin_credentials, firestore as admin_firestore
from vertexai.generative_models import GenerativeModel, Image, Part
import vertexai
import tempfile
from PIL import Image as PILImage
from dotenv import load_dotenv
import os


load_dotenv()

PROJECT_ID  = os.getenv("PROJECT_ID")
LOCATION = os.getenv("LOCATION")


from vertexai import init
init(project=PROJECT_ID, location=LOCATION) #initialization


SERVICE_ACCOUNT_FILE = os.getenv("SERVICE_ACCOUNT_FILE")


credentials = service_account.Credentials.from_service_account_file(SERVICE_ACCOUNT_FILE)
vertexai.init(project=PROJECT_ID, location=LOCATION, credentials=credentials)
model = GenerativeModel("gemini-2.0-flash-001")  # safer public model

# --- INIT FIREBASE (Safe check) ---
admin_cred = admin_credentials.Certificate(SERVICE_ACCOUNT_FILE)
if not firebase_admin._apps:
    firebase_admin.initialize_app(admin_cred)

db = admin_firestore.client()

# --- STREAMLIT UI ---
st.set_page_config(page_title="Project Kisan", page_icon="üåæ")
st.title("üåæ Project Kisan ‚Äì Crop Disease Detection")

farmer_name = st.text_input("üë®‚Äçüåæ Enter Farmer's Name")
uploaded_file = st.file_uploader("üì∑ Upload Crop Leaf Image", type=["jpg", "jpeg", "png"])

if uploaded_file and st.button("Diagnose Disease"):
    st.image(uploaded_file, caption="Uploaded Image", use_container_width=True)

    # Save image temporarily
    with tempfile.NamedTemporaryFile(delete=False, suffix=".jpg") as tmp_file:
        img = PILImage.open(uploaded_file)
        img.save(tmp_file.name)
        image_path = tmp_file.name

    # Prepare image part
    image_part = Part.from_image(Image.load_from_file(image_path))

    # Prompt in Kannada
    prompt = (
        "‡≤®‡≥Ä‡≤µ‡≥Å ‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤∞‡≥à‡≤§‡≤∞‡≤ø‡≤ó‡≥Ü ‡≤∏‡≤π‡≤æ‡≤Ø ‡≤Æ‡≤æ‡≤°‡≥Å‡≤§‡≥ç‡≤§‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤ø. ‡≤à ‡≤∏‡≤∏‡≥ç‡≤Ø‡≤¶ ‡≤é‡≤≤‡≥Ü‡≤Ø ‡≤ö‡≤ø‡≤§‡≥ç‡≤∞‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤®‡≥ã‡≤°‡≤ø. "
        "‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤ï‡≤∞‡≥ç‡≤®‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤π‡≤µ‡≤æ‡≤Æ‡≤æ‡≤® ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤ï‡≥É‡≤∑‡≤ø ‡≤™‡≤∞‡≤ø‡≤∏‡≥ç‡≤•‡≤ø‡≤§‡≤ø‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤Ü‡≤ß‡≤∞‡≤ø‡≤∏‡≤ø, ‡≤à ‡≤é‡≤≤‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤ï‡≤Ç‡≤°‡≥Å‡≤¨‡≤∞‡≥Å‡≤µ ‡≤∞‡≥ã‡≤ó ‡≤Ö‡≤•‡≤µ‡≤æ ‡≤ï‡≥Ä‡≤ü‡≤™‡≥Ä‡≤°‡≥Ü ‡≤Ø‡≤æ‡≤µ‡≤¶‡≥Å ‡≤é‡≤Ç‡≤¨‡≥Å‡≤¶‡≤®‡≥ç‡≤®‡≥Å ‡≤ó‡≥Å‡≤∞‡≥Å‡≤§‡≤ø‡≤∏‡≤ø. "
        "‡≤™‡≥ç‡≤∞‡≤∏‡≤ï‡≥ç‡≤§ ‡≤ï‡≤∞‡≥ç‡≤£‡≤æ‡≤ü‡≤ï‡≤¶ ‡≤°‡≥á‡≤ü‡≤æ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∏‡≥ç‡≤•‡≤≥‡≥Ä‡≤Ø‡≤µ‡≤æ‡≤ó‡≤ø ‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø‡≤µ‡≤æ‡≤ó‡≤ø‡≤∞‡≥Å‡≤µ ‡≤∏‡≤Æ‡≤∏‡≥ç‡≤Ø‡≥Ü‡≤ó‡≤≥ ‡≤Ü‡≤ß‡≤æ‡≤∞‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤Æ‡≤æ‡≤§‡≥ç‡≤∞ ‡≤â‡≤§‡≥ç‡≤§‡≤∞ ‡≤®‡≥Ä‡≤°‡≤ø. "
        "‡≤¶‡≤Ø‡≤µ‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å ‡≤à ‡≤∏‡≤Æ‡≤∏‡≥ç‡≤Ø‡≥Ü‡≤ó‡≥Ü ‡≤∏‡≤∞‡≤≥, ‡≤∞‡≥à‡≤§‡≤∞‡≤ø‡≤ó‡≥Ü ‡≤Ö‡≤∞‡≥ç‡≤•‡≤µ‡≤æ‡≤ó‡≥Å‡≤µ‡≤Ç‡≤§‡≤π ‡≤ï‡≤®‡≥ç‡≤®‡≤°‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤∏‡≥ç‡≤•‡≤≥‡≥Ä‡≤Ø‡≤µ‡≤æ‡≤ó‡≤ø ‡≤≤‡≤≠‡≥ç‡≤Ø‡≤µ‡≤ø‡≤∞‡≥Å‡≤µ ‡≤™‡≤∞‡≤ø‡≤π‡≤æ‡≤∞‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Æ‡≤æ‡≤§‡≥ç‡≤∞ ‡≤®‡≥Ä‡≤°‡≤ø‡≤∞‡≤ø."
    )

    try:
        response = model.generate_content([prompt, image_part])
        result = response.text

        st.success("‚úÖ Diagnosis in Kannada:")
        st.markdown(result)

        # Save to Firestore
        db.collection("diagnosis").add({
            "farmer": farmer_name,
            "diagnosis": result,
            "image_name": uploaded_file.name
        })

        st.info("üìù Diagnosis saved to Firebase")

    except Exception as e:
        st.error(f"‚ùå Something went wrong: {e}")